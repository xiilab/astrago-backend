dependencies {
    implementation project(':module-k8s')
    implementation project(':module-k8s-db')
    implementation project(':module-user')
    implementation project(':module-common')
    implementation project(':module-alert')
    implementation project(':module-monitor')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'


    // KeyCloak
    implementation 'org.keycloak:keycloak-admin-client:23.0.1'
    implementation 'org.keycloak:keycloak-spring-boot-starter:23.0.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    // websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.2.1'
    //k8s
    implementation 'io.fabric8:kubernetes-client:6.9.2'
    implementation 'io.fabric8:openshift-client:6.9.2'
    //terminal
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1' //추가
    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
//    implementation 'org.hibernate:hibernate-core:5.5.6.Final'
    // simple json
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

def querydslSrcDir = "src/main/generated"
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
