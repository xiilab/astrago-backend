name: uyuni backend image CI

on:
  push:
    branches: ["develop", "master"]
  pull_request:
    branches: ["develop", "master"]

jobs:
  build:
    runs-on: [self-hosted, linux]
    permissions:
      contents: write
    strategy:
      max-parallel: 3
      matrix:
        include:
          - image: xiilab/uyuni-backend-core
            path: server-core
            dockerfile: server-core/Dockerfile
            moudle: core
          - image: xiilab/uyuni-backend-batch
            path: server-batch
            dockerfile: server-batch/Dockerfile
            moudle: batch
          - image: xiilab/uyuni-backend-monitor
            path: server-monitor
            dockerfile: server-monitor/Dockerfile
            moudle: monitor
    steps:
    # 원격머신에 repo checkout
    - name: Checkout
      uses: actions/checkout@v3
    # JDK 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
    # Gradle build
    - name: Build with Gradle
      run: ./gradlew ${{ matrix.path }}:bootjar
    # Docker buildx 설정
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3.0.0
    # Dockerhub에 로그인
    - name: Login to DockerHub
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    # docker metadata 설정
    - name: Docker Metadata action
      id: meta
      uses: docker/metadata-action@v5.3.0
      with:
        images: ${{ matrix.image }}
    # Docker Image 빌드 및 푸시
    - name: Build and push Docker images
      uses: docker/build-push-action@v5.1.0
      with:
        context: ./${{ matrix.path }}
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: push monochart
      run: |
        cd ~
        git clone https://github.com/xiilab/uyuni-infra
        cd uyuni-infra
        sed -i "/^ *${{ matrix.module }}:/,/^ *imageTag:/ s@^\( *imageTag: *\).*@\1${{ steps.meta.outputs.tags }}@" environments/dev/values.yaml
        helmfile -e dev template > monochart/monochart.yaml
        git config --global user.email "hc.park@xiilab.com"
        git config --global user.name "hc.park"
        git add monochart/monochart.yaml
        git commit -m "update monochart"
        git push
