name: Deploy to Production workflow
run-name: ${{ github.actor }} deploys to Production ðŸš€
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - feature/prod-workflow


env:
  DOCKERHUB_REPOSITORY: xiilab/astrago
  GIT_DEPLOYMENT_REPOSITORY: xiilab/astrago-deployment

jobs:
  prod-integration:
    if: startsWith(github.head_ref, 'release/')
    runs-on: [ ubuntu-latest ]
    outputs:
      IMAGE_TAG: ${{ steps.extract_image_tag.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v4
      - id: extract_image_tag
        run: |
          CURRENT_RELEASE=$(git describe --tags "$(git rev-list --tags --max-count=1)")
          SPLIT_CURRENT_RELEASE=($(echo "$CURRENT_RELEASE" | tr -d 'v' | tr '.' ' '))
          
          BRANCH_VERSION=$(echo "${GITHUB_HEAD_REF##*/}" | grep -E '^[0-9]+\.[0-9]+$')
          
          if [[ "$GITHUB_HEAD_REF" == release* ]] then
            if [[ "${#BRANCH_VERSION[0]}" -gt "${#SPLIT_CURRENT_RELEASE[0]}"  ]]; then
              NEW_RELEASE=v$(( SPLIT_CURRENT_RELEASE[0] + 1)).0.0;
            elif [[ "${#BRANCH_VERSION[0]}" -eq "${#SPLIT_CURRENT_RELEASE[0]}"  ]; then
              NEW_RELEASE=v${SPLIT_CURRENT_RELEASE[0]}.$(( SPLIT_CURRENT_RELEASE[1] + 1)).0;
            fi
          else
            NEW_RELEASE=v${SPLIT_CURRENT_RELEASE[0]}.${SPLIT_CURRENT_RELEASE[1]}.$(( SPLIT_CURRENT_RELEASE[2] + 1))
          fi
          echo "NEW_RELEASE=$NEW_RELEASE"
          
          IMAGE_TAG=${NEW_RELEASE}-$(git rev-parse --short=4 HEAD)
          echo "IMAGE_TAG=$IMAGE_TAG"